{"version":3,"file":"static/js/737.5e1a1aa0.chunk.js","mappings":"iNAEaA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC5B,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAPQ,SAAAC,GACdA,EAAEC,iBACFN,EAAgBE,EAAQ,CAAEA,MAAOA,EAAMK,QAAW,CAAC,GACnDJ,EAAS,GACV,EAGC,WACE,kBAAOK,KAAK,OAAOC,SAZN,SAACJ,GAChBF,EAASE,EAAEK,OAAOC,MACnB,EAU0CA,MAAOT,KAC9C,mBAAQM,KAAK,SAAb,sBAGL,E,iBCnBYI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxB,OACE,yBAAa,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SAAuDI,GAASC,KAApEF,EAEZ,KAIN,E,SCTYM,EAAS,WACpB,OAA4BtB,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqB1B,EAArB,KACME,EAAQwB,EAAaC,IAAI,SAa/B,OAXAC,EAAAA,EAAAA,YAAU,WACH1B,IAGL2B,EAAAA,EAAAA,IAAY3B,GACT4B,MAAK,SAAAC,GACJP,EAAUO,EACX,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAAC/B,KAGF,iCACE,SAACH,EAAD,CAAaC,gBAAiBA,KAC9B,SAACY,EAAD,CAAWC,OAAQA,KACnB,SAAC,EAAAuB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAKP,C,+LC9BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,oCAAuCC,IADnC,uBACnBE,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbZ,EAAW,mCAAG,WAAM3B,GAAN,yFACFoC,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDrC,EAApD,+CADE,uBACjBuC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,sDAKXC,EAAY,mCAAG,WAAM1B,GAAN,yFACHqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,oBAAkCsB,EAAlC,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAY,mCAAG,WAAM3B,GAAN,yFACHqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,4BAA0CsB,EAA1C,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAY,mCAAG,WAAM5B,GAAN,yFACHqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,4BAAyCsB,EAAzC,2BADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qD","sources":["pages/Movies/MovieSearch.jsx","pages/Movies/MovieList.jsx","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const MovieSearch = ({ setSearchParams }) => {\r\n  const [query, setQuery ] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setQuery(e.target.value);\r\n  }\r\n\r\n const onSubmit = e => {\r\n    e.preventDefault();\r\n    setSearchParams(query ? { query: query.trim() } : {});\r\n    setQuery('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input type=\"text\" onChange={onChange} value={query} />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};","import { Link, useLocation } from \"react-router-dom\"\r\n\r\nexport const MovieList = ({ movies }) => {\r\n  \r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {movies.map(({ id, title, name }) => {\r\n        return (\r\n          <li key={id}><Link to={`/movies/${id}`} state={{ from: location }}>{title || name}</Link></li>\r\n        )\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n};\r\n","import { MovieSearch } from \"./MovieSearch\";\r\nimport { MovieList } from \"./MovieList\";\r\nimport { searchMovie } from 'services/api';\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport { Outlet, useSearchParams } from 'react-router-dom';\r\n\r\nexport const Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams('');\r\n  const query = searchParams.get('query');\r\n    \r\n  useEffect(() => {\r\n    if (!query) {\r\n        return \r\n    }\r\n    searchMovie(query)\r\n      .then(resp => {\r\n        setMovies(resp);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [query]);\r\n    \r\n  return (\r\n    <>\r\n      <MovieSearch setSearchParams={setSearchParams} />\r\n      <MovieList movies={movies} />\r\n      <Suspense fallback={null}>\r\n        <Outlet/>\r\n      </Suspense>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '217a4cbe2f726447c9a39cfed7ff9ffe';\r\n\r\nexport const trendingMovie = async () => {\r\n  const { data } = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const searchMovie = async query => {\r\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\r\n  return data.results;\r\n};\r\n\r\nexport const detailsMovie = async id => {\r\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n  return data;\r\n};\r\n\r\nexport const creditsMovie = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n  return data;\r\n};\r\n\r\nexport const reviewsMovie = async id => {\r\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\r\n  return data.results;\r\n};\r\n\r\n"],"names":["MovieSearch","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","type","onChange","target","value","MovieList","movies","location","useLocation","map","id","title","name","to","state","from","Movies","setMovies","useSearchParams","searchParams","get","useEffect","searchMovie","then","resp","catch","err","console","log","Suspense","fallback","axios","API_KEY","trendingMovie","data","results","detailsMovie","creditsMovie","reviewsMovie"],"sourceRoot":""}