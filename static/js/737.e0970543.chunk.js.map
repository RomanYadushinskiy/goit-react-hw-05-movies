{"version":3,"file":"static/js/737.e0970543.chunk.js","mappings":"kNAEaA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC5B,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAPQ,SAAAC,GACdA,EAAEC,iBACFN,EAAgBE,EAAQ,CAAEA,MAAOA,EAAMK,QAAW,CAAC,GACnDJ,EAAS,GACV,EAGC,WACE,kBAAOK,KAAK,OAAOC,SAZN,SAACJ,GAChBF,EAASE,EAAEK,OAAOC,MACnB,EAU0CA,MAAOT,KAC9C,mBAAQM,KAAK,SAAb,sBAGL,E,iBCnBYI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxB,OACE,yBAAa,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SAAuDI,GAASC,KAApEF,EAEZ,KAIN,E,SCeD,EAxBe,WACb,OAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeU,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBzB,EAArB,KACME,EAAQuB,EAAaC,IAAI,SAS/B,OAPAC,EAAAA,EAAAA,YAAU,WACHzB,IAGL0B,EAAAA,EAAAA,IAAY1B,GAAO2B,KAAKN,EACzB,GAAE,CAACrB,KAGF,iCACE,SAACH,EAAD,CAAaC,gBAAiBA,KAC9B,SAACY,EAAD,CAAWC,OAAQA,KACnB,SAAC,EAAAiB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAKP,C,+LC1BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,oCAAuCC,IADnC,uBACnBE,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,qDAKbR,EAAW,mCAAG,WAAM1B,GAAN,yFACF8B,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoD/B,EAApD,+CADE,uBACjBiC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,sDAKXC,EAAY,mCAAG,WAAMpB,GAAN,yFACHe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAkCgB,EAAlC,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAY,mCAAG,WAAMrB,GAAN,yFACHe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,4BAA0CgB,EAA1C,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAY,mCAAG,WAAMtB,GAAN,yFACHe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,4BAAyCgB,EAAzC,2BADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qD","sources":["pages/Movies/MovieSearch.jsx","pages/Movies/MovieList.jsx","pages/Movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const MovieSearch = ({ setSearchParams }) => {\n  const [query, setQuery ] = useState(\"\");\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  }\n\n const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query ? { query: query.trim() } : {});\n    setQuery('');\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" onChange={onChange} value={query} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};","import { Link, useLocation } from \"react-router-dom\"\n\nexport const MovieList = ({ movies }) => {\n  \n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title, name }) => {\n        return (\n          <li key={id}><Link to={`/movies/${id}`} state={{ from: location }}>{title || name}</Link></li>\n        )\n      })}\n    </ul>\n  );\n\n};\n","import { MovieSearch } from \"./MovieSearch\";\nimport { MovieList } from \"./MovieList\";\nimport { searchMovie } from 'services/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query');\n    \n  useEffect(() => {\n    if (!query) {\n        return \n    }\n    searchMovie(query).then(setMovies);\n  }, [query]);\n    \n  return (\n    <>\n      <MovieSearch setSearchParams={setSearchParams} />\n      <MovieList movies={movies} />\n      <Suspense fallback={null}>\n        <Outlet/>\n      </Suspense>\n    </>\n    \n  );\n};\n\nexport default Movies","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '217a4cbe2f726447c9a39cfed7ff9ffe';\n\nexport const trendingMovie = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return data.results;\n};\n\nexport const detailsMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n};\n\nexport const creditsMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return data;\n};\n\nexport const reviewsMovie = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return data.results;\n};\n\n"],"names":["MovieSearch","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","type","onChange","target","value","MovieList","movies","location","useLocation","map","id","title","name","to","state","from","setMovies","useSearchParams","searchParams","get","useEffect","searchMovie","then","Suspense","fallback","axios","API_KEY","trendingMovie","data","results","detailsMovie","creditsMovie","reviewsMovie"],"sourceRoot":""}